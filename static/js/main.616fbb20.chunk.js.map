{"version":3,"sources":["components/Snake/Snake.jsx","components/Food/apple.svg","components/Food/Food.jsx","right-arrow.svg","App.js","reportWebVitals.js","index.js","components/Snake/Snake.module.css","components/Food/Food.module.css"],"names":["Snake","snakeDots","map","dot","idx","style","left","top","className","styles","snakeDot","Food","src","foodSvg","alt","snakeFood","App","props","getRandomCoords","width","height","Math","floor","random","state","snakeSize","moveSnake","dots","head","length","direction","push","shift","setState","checkIfCollapsed","snake","pop","forEach","onGameOver","checkIfEat","food","enlargeSnake","newSnake","unshift","alert","speed","timeoutId","document","querySelector","clientWidth","clientHeight","this","setInterval","clearTimeout","id","onClick","ArrowIcon","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.616fbb20.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './Snake.module.css';\r\n\r\nconst Snake = ({ snakeDots }) => {\r\n  return (\r\n    <div>\r\n      {snakeDots.map((dot, idx) => {\r\n        const style = {\r\n          left: `${dot[0]}px`,\r\n          top: `${dot[1]}px`\r\n        };\r\n        return <div className={styles.snakeDot} key={idx} style={style}></div>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snake;\r\n","export default __webpack_public_path__ + \"static/media/apple.1a67822e.svg\";","import React from 'react';\r\nimport styles from './Food.module.css';\r\nimport foodSvg from './apple.svg';\r\n\r\nconst Food = ({ dot }) => {\r\n  const style = {\r\n    left: `${dot[0]}px`,\r\n    top: `${dot[1]}px`\r\n  };\r\n  return (\r\n    <img\r\n      src={foodSvg}\r\n      alt='apple'\r\n      className={styles.snakeFood}\r\n      style={style}></img>\r\n  );\r\n};\r\n\r\nexport default Food;\r\n","export default __webpack_public_path__ + \"static/media/right-arrow.1260e6bc.svg\";","import React, { Component } from 'react';\r\nimport { Snake, Food } from './components';\r\n// import { calcSnakeLength } from './utils/calcSnakeLength';\r\nimport ArrowIcon from './right-arrow.svg';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: null,\r\n      height: null,\r\n      snakeSize: 20,\r\n      snakeDots: [\r\n        [0, 0],\r\n        [20, 0]\r\n      ],\r\n      direction: 'RIGHT',\r\n      food: [0, 0],\r\n      speed: 200,\r\n      timeoutId: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const width = document.querySelector('.game-area').clientWidth;\r\n    const height = document.querySelector('.game-area').clientHeight;\r\n    this.setState({\r\n      width,\r\n      height,\r\n      food: this.getRandomCoords(width, height)\r\n    });\r\n\r\n    setInterval(this.moveSnake, this.state.speed);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.state.timeoutId);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkIfCollapsed();\r\n    this.checkIfEat();\r\n  }\r\n\r\n  getRandomCoords = (width, height) => {\r\n    return [\r\n      Math.floor(\r\n        Math.random() *\r\n          ((width - this.state.snakeSize) / this.state.snakeSize + 1)\r\n      ) * this.state.snakeSize,\r\n      Math.floor(\r\n        Math.random() *\r\n          ((height - this.state.snakeSize) / this.state.snakeSize + 1)\r\n      ) * this.state.snakeSize\r\n    ];\r\n  };\r\n\r\n  moveSnake = () => {\r\n    let dots = [...this.state.snakeDots];\r\n    let head = dots[dots.length - 1];\r\n\r\n    switch (this.state.direction) {\r\n      case 'RIGHT':\r\n        head = [head[0] + this.state.snakeSize, head[1]];\r\n        break;\r\n\r\n      case 'LEFT':\r\n        head = head = [head[0] - this.state.snakeSize, head[1]];\r\n        break;\r\n\r\n      case 'UP':\r\n        head = head = [head[0], head[1] - this.state.snakeSize];\r\n        break;\r\n\r\n      case 'DOWN':\r\n        head = head = [head[0], head[1] + this.state.snakeSize];\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    dots.push(head);\r\n    dots.shift();\r\n    this.setState({\r\n      snakeDots: dots\r\n    });\r\n  };\r\n\r\n  checkIfCollapsed = () => {\r\n    let snake = [...this.state.snakeDots];\r\n    let head = snake[snake.length - 1];\r\n    snake.pop();\r\n\r\n    snake.forEach(dot => {\r\n      if (head[0] === dot[0] && head[1] === dot[1]) {\r\n        this.onGameOver();\r\n      }\r\n    });\r\n    if (\r\n      head[0] >= this.state.width ||\r\n      head[0] < 0 ||\r\n      head[1] >= this.state.height ||\r\n      head[1] < 0\r\n    ) {\r\n      this.onGameOver();\r\n    }\r\n  };\r\n\r\n  checkIfEat = () => {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    let food = this.state.food;\r\n\r\n    if (head[0] === food[0] && head[1] === food[1]) {\r\n      this.setState({\r\n        food: this.getRandomCoords(this.state.width, this.state.height)\r\n      });\r\n      this.enlargeSnake();\r\n    }\r\n  };\r\n\r\n  enlargeSnake = () => {\r\n    const newSnake = [...this.state.snakeDots];\r\n    newSnake.unshift([]);\r\n    this.setState({\r\n      snakeDots: newSnake\r\n    });\r\n  };\r\n\r\n  onGameOver = () => {\r\n    alert(`Game over. Snake length is ${this.state.snakeDots.length}`);\r\n    this.setState({\r\n      snakeDots: [\r\n        [0, 0],\r\n        [20, 0]\r\n      ],\r\n      direction: 'RIGHT',\r\n      food: this.getRandomCoords(this.state.width, this.state.height)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='wrapper'>\r\n        <div className='game-area' id='game-area'>\r\n          <Snake snakeDots={this.state.snakeDots} />\r\n          <Food dot={this.state.food} />\r\n        </div>\r\n        <div className='controller-container'>\r\n          <button\r\n            className='up'\r\n            onClick={() => {\r\n              this.setState({\r\n                direction: 'UP'\r\n              });\r\n            }}>\r\n            <img src={ArrowIcon} alt='' />\r\n          </button>\r\n          <button\r\n            className='right'\r\n            onClick={() => {\r\n              this.setState({\r\n                direction: 'RIGHT'\r\n              });\r\n            }}>\r\n            <img src={ArrowIcon} alt='' />\r\n          </button>\r\n          <button\r\n            className='left'\r\n            onClick={() => {\r\n              this.setState({\r\n                direction: 'LEFT'\r\n              });\r\n            }}>\r\n            <img src={ArrowIcon} alt='' />\r\n          </button>\r\n          <button\r\n            className='down'\r\n            onClick={() => {\r\n              this.setState({\r\n                direction: 'DOWN'\r\n              });\r\n            }}>\r\n            <img src={ArrowIcon} alt='' />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snakeDot\":\"Snake_snakeDot__zvGnR\",\"snakeImg\":\"Snake_snakeImg__3eJX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snakeFood\":\"Food_snakeFood__1rfPE\"};"],"sourceRoot":""}