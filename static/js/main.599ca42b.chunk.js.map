{"version":3,"sources":["components/Snake/Snake.jsx","components/Food/apple.svg","components/Food/Food.jsx","components/Bomb/bomb.svg","components/Bomb/Bomb.jsx","right-arrow.svg","App.js","reportWebVitals.js","index.js","components/Snake/Snake.module.css","components/Food/Food.module.css","components/Bomb/bomb.module.css"],"names":["Snake","snakeDots","map","dot","idx","style","left","top","className","styles","snakeDot","Food","src","foodSvg","alt","snakeFood","Bomb","bomb","BombIcon","App","props","changeBombPosition","state","food","setState","getRandomCoords","width","height","Math","floor","random","snakeSize","moveSnake","dots","head","length","direction","push","shift","checkIfCollapsed","snake","pop","forEach","onGameOver","checkIfEatFood","enlargeSnake","checkIfEatBomb","newSnake","unshift","alert","speed","timeoutId","document","querySelector","clientWidth","clientHeight","this","setInterval","clearTimeout","id","onClick","ArrowIcon","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.599ca42b.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './Snake.module.css';\r\n\r\nconst Snake = ({ snakeDots }) => {\r\n  return (\r\n    <div>\r\n      {snakeDots.map((dot, idx) => {\r\n        const style = {\r\n          left: `${dot[0]}px`,\r\n          top: `${dot[1]}px`\r\n        };\r\n        return <div className={styles.snakeDot} key={idx} style={style}></div>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snake;\r\n","export default __webpack_public_path__ + \"static/media/apple.1a67822e.svg\";","import React from 'react';\r\nimport styles from './Food.module.css';\r\nimport foodSvg from './apple.svg';\r\n\r\nconst Food = ({ dot }) => {\r\n  const style = {\r\n    left: `${dot[0]}px`,\r\n    top: `${dot[1]}px`\r\n  };\r\n  return (\r\n    <img\r\n      src={foodSvg}\r\n      alt='apple'\r\n      className={styles.snakeFood}\r\n      style={style}></img>\r\n  );\r\n};\r\n\r\nexport default Food;\r\n","export default __webpack_public_path__ + \"static/media/bomb.0d7f7f7c.svg\";","import React from 'react';\r\nimport BombIcon from './bomb.svg';\r\nimport styles from './bomb.module.css';\r\n\r\nconst Bomb = ({ dot }) => {\r\n  const style = {\r\n    left: `${dot[0]}px`,\r\n    top: `${dot[1]}px`\r\n  };\r\n  return (\r\n    <img style={style} className={styles.bomb} src={BombIcon} alt='Bomb' />\r\n  );\r\n};\r\n\r\nexport default Bomb;\r\n","export default __webpack_public_path__ + \"static/media/right-arrow.1260e6bc.svg\";","import React, { Component } from 'react';\r\nimport { Snake, Food, Bomb } from './components';\r\n// import { calcSnakeLength } from './utils/calcSnakeLength';\r\nimport ArrowIcon from './right-arrow.svg';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: null,\r\n      height: null,\r\n      snakeSize: 20,\r\n      snakeDots: [\r\n        [0, 0],\r\n        [20, 0]\r\n      ],\r\n      direction: 'RIGHT',\r\n      food: [0, 0],\r\n      speed: 200,\r\n      timeoutId: 0,\r\n      bomb: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const width = document.querySelector('.game-area').clientWidth;\r\n    const height = document.querySelector('.game-area').clientHeight;\r\n    this.setState({\r\n      width,\r\n      height,\r\n      food: this.getRandomCoords(width, height),\r\n      bomb: this.getRandomCoords(width, height)\r\n    });\r\n\r\n    setInterval(this.moveSnake, this.state.speed);\r\n    setInterval(this.changeBombPosition, 5000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.state.timeoutId);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkIfCollapsed();\r\n    this.checkIfEatFood();\r\n    this.checkIfEatBomb();\r\n  }\r\n\r\n  changeBombPosition = () => {\r\n    if (\r\n      this.state.bomb[0] === this.state.food[0] &&\r\n      this.state.bomb[1] === this.state.food[1]\r\n    ) {\r\n      this.setState({\r\n        bomb: this.getRandomCoords(this.state.width, this.state.height)\r\n      });\r\n    }\r\n    this.setState({\r\n      bomb: this.getRandomCoords(this.state.width, this.state.height)\r\n    });\r\n  };\r\n\r\n  getRandomCoords = (width, height) => {\r\n    return [\r\n      Math.floor(\r\n        Math.random() *\r\n          ((width - this.state.snakeSize) / this.state.snakeSize + 1)\r\n      ) * this.state.snakeSize,\r\n      Math.floor(\r\n        Math.random() *\r\n          ((height - this.state.snakeSize) / this.state.snakeSize + 1)\r\n      ) * this.state.snakeSize\r\n    ];\r\n  };\r\n\r\n  moveSnake = () => {\r\n    let dots = [...this.state.snakeDots];\r\n    let head = dots[dots.length - 1];\r\n\r\n    switch (this.state.direction) {\r\n      case 'RIGHT':\r\n        head = [head[0] + this.state.snakeSize, head[1]];\r\n        break;\r\n\r\n      case 'LEFT':\r\n        head = head = [head[0] - this.state.snakeSize, head[1]];\r\n        break;\r\n\r\n      case 'UP':\r\n        head = head = [head[0], head[1] - this.state.snakeSize];\r\n        break;\r\n\r\n      case 'DOWN':\r\n        head = head = [head[0], head[1] + this.state.snakeSize];\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    dots.push(head);\r\n    dots.shift();\r\n    this.setState({\r\n      snakeDots: dots\r\n    });\r\n  };\r\n\r\n  checkIfCollapsed = () => {\r\n    let snake = [...this.state.snakeDots];\r\n    let head = snake[snake.length - 1];\r\n    snake.pop();\r\n\r\n    snake.forEach(dot => {\r\n      if (head[0] === dot[0] && head[1] === dot[1]) {\r\n        this.onGameOver();\r\n      }\r\n    });\r\n    if (\r\n      head[0] >= this.state.width ||\r\n      head[0] < 0 ||\r\n      head[1] >= this.state.height ||\r\n      head[1] < 0\r\n    ) {\r\n      this.onGameOver();\r\n    }\r\n  };\r\n\r\n  checkIfEatFood = () => {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    let food = this.state.food;\r\n\r\n    if (head[0] === food[0] && head[1] === food[1]) {\r\n      this.setState({\r\n        food: this.getRandomCoords(this.state.width, this.state.height)\r\n      });\r\n      this.enlargeSnake();\r\n    }\r\n  };\r\n\r\n  checkIfEatBomb = () => {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    let bomb = this.state.bomb;\r\n\r\n    if (head[0] === bomb[0] && head[1] === bomb[1]) {\r\n      this.onGameOver();\r\n    }\r\n  };\r\n\r\n  enlargeSnake = () => {\r\n    const newSnake = [...this.state.snakeDots];\r\n    newSnake.unshift([]);\r\n    this.setState({\r\n      snakeDots: newSnake\r\n    });\r\n  };\r\n\r\n  onGameOver = () => {\r\n    alert(`Game over. Snake length is ${this.state.snakeDots.length}`);\r\n    this.setState({\r\n      snakeDots: [\r\n        [0, 0],\r\n        [20, 0]\r\n      ],\r\n      direction: 'RIGHT',\r\n      food: this.getRandomCoords(this.state.width, this.state.height),\r\n      bomb: this.getRandomCoords(this.state.width, this.state.height)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='wrapper'>\r\n        <div className='game-area' id='game-area'>\r\n          <Snake snakeDots={this.state.snakeDots} />\r\n          <Food dot={this.state.food} />\r\n          <Bomb dot={this.state.bomb} />\r\n        </div>\r\n        <div className='controller-container'>\r\n          <button\r\n            className='up'\r\n            onClick={() => {\r\n              this.setState({\r\n                direction: 'UP'\r\n              });\r\n            }}>\r\n            <img src={ArrowIcon} alt='' />\r\n          </button>\r\n          <button\r\n            className='right'\r\n            onClick={() => {\r\n              this.setState({\r\n                direction: 'RIGHT'\r\n              });\r\n            }}>\r\n            <img src={ArrowIcon} alt='' />\r\n          </button>\r\n          <button\r\n            className='left'\r\n            onClick={() => {\r\n              this.setState({\r\n                direction: 'LEFT'\r\n              });\r\n            }}>\r\n            <img src={ArrowIcon} alt='' />\r\n          </button>\r\n          <button\r\n            className='down'\r\n            onClick={() => {\r\n              this.setState({\r\n                direction: 'DOWN'\r\n              });\r\n            }}>\r\n            <img src={ArrowIcon} alt='' />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snakeDot\":\"Snake_snakeDot__zvGnR\",\"snakeImg\":\"Snake_snakeImg__3eJX2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snakeFood\":\"Food_snakeFood__1rfPE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bomb\":\"bomb_bomb__1Iec4\"};"],"sourceRoot":""}