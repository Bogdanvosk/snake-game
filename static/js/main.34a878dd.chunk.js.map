{"version":3,"sources":["utils/getRandomCoords.js","components/Snake/Snake.jsx","components/Food/Food.jsx","App.js","reportWebVitals.js","index.js","components/Snake/Snake.module.css","components/Food/Food.module.css"],"names":["getRandomCoords","areaWidth","blockWidth","Math","floor","random","Snake","snakeDots","map","dot","idx","style","left","top","className","styles","snakeDot","Food","snakeFood","WINDOW_WIDTH","window","screen","width","WINDOW_HEIGHT","height","initialState","windowWidth","windowHeight","snakePartWidth","snakePartHeight","direction","food","speed","App","state","onKeyDown","e","keyCode","setState","moveSnake","dots","head","length","push","shift","checkIfCollapsed","snake","pop","forEach","onGameOver","console","log","checkIfEat","enlargeSnake","newSnake","unshift","alert","setInterval","this","document","onkeydown","onSwipedLeft","onSwipedRight","onSwipedUp","onSwipedDown","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.34a878dd.chunk.js","sourcesContent":["export const getRandomCoords = (areaWidth, blockWidth) => {\r\n  const x =\r\n    Math.floor(Math.random() * ((areaWidth - blockWidth) / blockWidth + 1)) *\r\n    blockWidth;\r\n  const y =\r\n    Math.floor(Math.random() * ((areaWidth - blockWidth) / blockWidth + 1)) *\r\n    blockWidth;\r\n    \r\n  return [x, y];\r\n};\r\n","import React from 'react';\r\nimport styles from './Snake.module.css';\r\n\r\nconst Snake = ({ snakeDots }) => {\r\n  return (\r\n    <div>\r\n      {snakeDots.map((dot, idx) => {\r\n        const style = {\r\n          left: `${dot[0]}px`,\r\n          top: `${dot[1]}px`,\r\n        };\r\n        return <div className={styles.snakeDot} key={idx} style={style}></div>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snake;\r\n","import React from 'react';\r\nimport styles from './Food.module.css';\r\n\r\nconst Food = ({ dot }) => {\r\n  const style = {\r\n    left: `${dot[0]}px`,\r\n    top: `${dot[1]}px`\r\n  };\r\n  return <div className={styles.snakeFood} style={style}></div>;\r\n};\r\n\r\nexport default Food;\r\n","import React, { Component } from 'react';\r\nimport { getRandomCoords } from './utils/getRandomCoords';\r\nimport { Snake, Food } from './components';\r\nimport ReactSwipeEvents from 'react-swipe-events';\r\n\r\nconst WINDOW_WIDTH = window.screen.width;\r\nconst WINDOW_HEIGHT = window.screen.height;\r\n\r\nconst SNAKE_PART_WIDTH = 20;\r\nconst SNAKE_PART_HEIGHT = 20;\r\n\r\nconst initialState = {\r\n  windowWidth: WINDOW_WIDTH,\r\n  windowHeight: WINDOW_HEIGHT,\r\n  snakePartWidth: SNAKE_PART_WIDTH,\r\n  snakePartHeight: SNAKE_PART_HEIGHT,\r\n  snakeDots: [\r\n    [0, 0],\r\n    [20, 0]\r\n  ],\r\n  direction: 'RIGHT',\r\n  food: getRandomCoords(WINDOW_WIDTH, SNAKE_PART_WIDTH),\r\n  speed: 200\r\n};\r\n\r\nexport default class App extends Component {\r\n  state = initialState;\r\n\r\n  componentDidMount() {\r\n    setInterval(this.moveSnake, this.state.speed);\r\n    document.onkeydown = this.onKeyDown;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.checkIfCollapsed();\r\n    this.checkIfEat();\r\n  }\r\n\r\n  onKeyDown = e => {\r\n    // e = e || window.event\r\n    switch (e.keyCode) {\r\n      case 38:\r\n        this.setState({\r\n          direction: 'UP'\r\n        });\r\n        break;\r\n      case 40:\r\n        this.setState({\r\n          direction: 'DOWN'\r\n        });\r\n        break;\r\n      case 37:\r\n        this.setState({\r\n          direction: 'LEFT'\r\n        });\r\n        break;\r\n      case 39:\r\n        this.setState({\r\n          direction: 'RIGHT'\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  moveSnake = () => {\r\n    let dots = [...this.state.snakeDots];\r\n    let head = dots[dots.length - 1];\r\n\r\n    switch (this.state.direction) {\r\n      case 'RIGHT':\r\n        head =\r\n          head[0] >= this.state.windowWidth\r\n            ? [0, head[1]]\r\n            : [head[0] + this.state.snakePartWidth, head[1]];\r\n        break;\r\n\r\n      case 'LEFT':\r\n        head =\r\n          head[0] <= 0\r\n            ? [this.state.windowWidth, head[1]]\r\n            : [head[0] - this.state.snakePartWidth, head[1]];\r\n        break;\r\n\r\n      case 'UP':\r\n        head =\r\n          head[1] <= 0\r\n            ? [head[0], this.state.windowHeight]\r\n            : [head[0], head[1] - this.state.snakePartHeight];\r\n        break;\r\n\r\n      case 'DOWN':\r\n        head =\r\n          head[1] >= this.state.windowHeight\r\n            ? [head[0], 0]\r\n            : [head[0], head[1] + this.state.snakePartHeight];\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    dots.push(head);\r\n    dots.shift();\r\n    this.setState({\r\n      snakeDots: dots\r\n    });\r\n  };\r\n\r\n  checkIfCollapsed = () => {\r\n    let snake = [...this.state.snakeDots];\r\n    let head = snake[snake.length - 1];\r\n    snake.pop();\r\n\r\n    snake.forEach(dot => {\r\n      if (head[0] === dot[0] && head[1] === dot[1]) {\r\n        this.onGameOver();\r\n      } else if (\r\n        head[0] >= this.state.windowWidth ||\r\n        head[1] >= this.state.windowHeight\r\n      ) {\r\n        console.log('Преграда!');\r\n        this.onGameOver();\r\n      }\r\n    });\r\n  };\r\n\r\n  checkIfEat = () => {\r\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\r\n    let food = this.state.food;\r\n\r\n    if (head[0] === food[0] && head[1] === food[1]) {\r\n      console.log('Съел');\r\n      this.setState({\r\n        food: getRandomCoords(WINDOW_WIDTH, SNAKE_PART_WIDTH)\r\n      });\r\n      this.enlargeSnake();\r\n    }\r\n  };\r\n\r\n  enlargeSnake = () => {\r\n    const newSnake = [...this.state.snakeDots];\r\n    newSnake.unshift([]);\r\n    this.setState({\r\n      snakeDots: newSnake\r\n    });\r\n  };\r\n\r\n  onGameOver = () => {\r\n    alert(`Game over. Snake length is ${this.state.snakeDots.length}`);\r\n    this.setState(initialState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ReactSwipeEvents\r\n        onSwipedLeft={() => {\r\n          this.setState({\r\n            direction: 'LEFT'\r\n          });\r\n        }}\r\n        onSwipedRight={() => {\r\n          this.setState({\r\n            direction: 'RIGHT'\r\n          });\r\n        }}\r\n        onSwipedUp={() => {\r\n          this.setState({\r\n            direction: 'UP'\r\n          });\r\n        }}\r\n        onSwipedDown={() => {\r\n          this.setState({\r\n            direction: 'DOWN'\r\n          });\r\n        }}>\r\n        <div className='game-area'>\r\n          <Snake snakeDots={this.state.snakeDots} />\r\n          <Food dot={this.state.food} />\r\n        </div>\r\n      </ReactSwipeEvents>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snakeDot\":\"Snake_snakeDot__zvGnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snakeFood\":\"Food_snakeFood__1rfPE\"};"],"sourceRoot":""}